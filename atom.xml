<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vance&#39;s Blog</title>
  
  
  <link href="http://mmvance.github.io/atom.xml" rel="self"/>
  
  <link href="http://mmvance.github.io/"/>
  <updated>2023-01-01T13:57:18.661Z</updated>
  <id>http://mmvance.github.io/</id>
  
  <author>
    <name>Vance</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Create Your Website</title>
    <link href="http://mmvance.github.io/2022/12/23/hello-world/"/>
    <id>http://mmvance.github.io/2022/12/23/hello-world/</id>
    <published>2022-12-23T07:58:27.825Z</published>
    <updated>2023-01-01T13:57:18.661Z</updated>
    
    <content type="html"><![CDATA[<p>本文章使用<a href="https://hexo.io/">Hexo</a>和GitHub Pages的方式搭建属于你自己的以一个网站。   </p><h1 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h1><p><a href="https://hexo.io/">Hexo</a> 是一个快速、简洁且高效的静态博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。我们只需要通过 Markdown 语法写好自己的博客内容，然后通过简单的命令就能够将生成的网页上传到 Github，然后大家都可以来访问你的网页了。既方便了自己，也给了自己一个展示自己成果的平台，是不是一举两得。</p><h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><p>搭建之前，需要做一些准备工作，首先需要确保你的电脑上已经上安装好了 Git 和 Node.Js，然后才能开始安装 Hexo，那么首先我们先来看看如何准备这这些环境。  </p><h1 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h1><p>Windows：<a href="https://git-scm.com/download/win">下载</a><br>Mac:<a href="https://sourceforge.net/projects/git-osx-installer/">下载</a></p><h1 id="设置Git"><a href="#设置Git" class="headerlink" title="设置Git"></a>设置Git</h1><p>在开始菜单中打开“Git Bush”应用<br><img src="/img/GitBush.png" alt="Git Bush"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;github 用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;github 注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>我的配置</p><blockquote><p>git config –global user.name “vance”<br>git config –global user.email “<a href="mailto:&#49;&#x32;&#51;&#x34;&#53;&#54;&#55;&#x38;&#x39;&#x40;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#x6d;">&#49;&#x32;&#51;&#x34;&#53;&#54;&#55;&#x38;&#x39;&#x40;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#x6d;</a>“</p></blockquote><h1 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h1><p>接着生成 ssh 密钥文件，输入如下命令后直接三次回车即可，一般不需要设置密码；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;github 注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>Judt like this page<br><img src="/img/SSH.png" alt="SSH"></p><p>一般执行上述命令之后，会生成 id_rsa 和 id_rsa.pub 两个文件，前者是我们私有的，而后者则是对外开放的。<br>接着找到生成的 .ssh 的文件夹中的 id_rsa.pub 密钥，将内容复制；<br><img src="/img/ssh_1.png" alt="SSH"></p><p>然后打开 <a href="https://github.com/settings/keys">GitHub-Settings-Keys</a> 页面，创建一个新的 SSH key，填写 Title 和 Key，Title 可以随意，而 Key 的内容则是我们刚才复制的 id_rsa.pub 中的内容，最后点击 Add SSH key 即可；<br><img src="/img/ssh_2.png" alt="SSH"><br>在开始菜单中打开Git Bash软件，输入以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如显示以下内容则Git与GitHub连接成功<br><img src="/img/try.png" alt="try"></p><h1 id="Node-Js-安装"><a href="#Node-Js-安装" class="headerlink" title="Node.Js 安装"></a>Node.Js 安装</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>去官网下载最新的稳定版 <a href="https://nodejs.org/en/">Node.JS</a> ，一般推荐 64 位（大家应该现在用的电脑基本都是 64 位的吧），安装的话很简单，基本就是下一步下一步点击就好。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>安装完成后，要查看我们是否安装成功，可以打开命令提示符（Win + R），输入 cmd 打开控制台，输入如下命令，如果出现对应版本号，说明安装成功了；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="/img/node.png" alt="Node"></p><h1 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h1><p>在你的硬盘上找个地儿，用来存放你的博客文件，比如我的就在 D:Blog，这个文件夹你可以根据自己的喜好来设置。然后从命令台进入当前文件夹，接下来就是安装过程了；</p><h2 id="首先安装Hexo"><a href="#首先安装Hexo" class="headerlink" title="首先安装Hexo"></a>首先安装Hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br></pre></td></tr></table></figure><p><img src="/img/npm_1.png" alt="npm"><br>1.新建一个文件夹用于存放你的博客，比如我的是 blog，然后进入该文件夹，并用如下命令进行初始化并安装必备组件；<br>在blog文件夹中右键选择Git Bash Here<br><img src="/img/hexo_1.png" alt="Hexo"><br>2.使用以下命令初始化Hexo，添加必要组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init </span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>初始化后，目录结构如下；</p><blockquote><p>├── _config.yml # 网站配置信息<br>├── package.json # 应用程序信息<br>├── scaffolds # 模板文件夹<br>├── source # 存放用户资源<br>|   ├── _drafts<br>|   └── _posts<br>└── themes # 主题文件夹</p></blockquote><p>3.输入如下命令，然后在浏览器中打开 <a href="http://localhost:4000；">http://localhost:4000；</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建博客</span></span><br><span class="line">hexo new <span class="string">&quot;博客名&quot;</span></span><br><span class="line"><span class="comment"># 生成静态网页</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 打开本地服务器</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>然后可以看到如下页面，这就是Hexo的初始化界面（本地预览）<br><img src="/img/hexo_2.png" alt="Hexo"></p><h1 id="GitHub个人仓库"><a href="#GitHub个人仓库" class="headerlink" title="GitHub个人仓库"></a>GitHub个人仓库</h1><p>首先需要有一个GitHub账号，如果没有请注册<a href="https://github.com/">GitHub</a><br>GitHub使用国内网络可能会访问404，如需使用VPN请自行购买，如需渠道联系我（仅用于学习用途）</p><h2 id="新建个人仓库"><a href="#新建个人仓库" class="headerlink" title="新建个人仓库"></a>新建个人仓库</h2><p>找到个人仓库并新建，新建一个仓库，而且得确保你的仓库是 public，同时，仓库名一定要是：</p><blockquote><p>用户名.github.io<br>我的仓库名就是<br>mmvance.github.io<br>建立好仓库以后，尝试访问以下网址测试连通性</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://username.github.io</span><br></pre></td></tr></table></figure><h1 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h1><p>我们刚才的博客根目录中的站点配置文件 _config.yml ，设置为你的个人仓库名即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>输入如下命令将本地文件上传到GitHub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#清除缓存文件</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment">#生成上传文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment">#上传到GitHub</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h1 id="更改GitHub设置"><a href="#更改GitHub设置" class="headerlink" title="更改GitHub设置"></a>更改GitHub设置</h1><h2 id="更改默认Branches"><a href="#更改默认Branches" class="headerlink" title="更改默认Branches"></a>更改默认Branches</h2><p>在上传到GitHub上以后我们会在GitHub仓库中看到多出了一个master分支;在setting中更改默认Branch为master<br><img src="/img/branches.png" alt="branches"></p><h2 id="更改Pages"><a href="#更改Pages" class="headerlink" title="更改Pages"></a>更改Pages</h2><p>setting中Pages的设置中branch也要更改为master<br><img src="/img/branshes_2.png" alt="branches"><br>稍等大约10分钟，上述章节的Hexo模板就能在<a href="https://username.github.io/">https://username.github.io</a> 上访问了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文章使用&lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;和GitHub Pages的方式搭建属于你自己的以一个网站。   &lt;/p&gt;
&lt;h1 id=&quot;Hexo-简介&quot;&gt;&lt;a href=&quot;#Hexo-简介&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
</feed>
